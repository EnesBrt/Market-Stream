services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: market_stream
      POSTGRES_USER: market_admin
      POSTGRES_PASSWORD: 123456
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U market_admin -d market_stream"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for Celery
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Django Web Application
  web:
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      - DJANGO_SECRET_KEY=django-insecure-&frii7l!br2#-t7vz*=ud6^=%so!$$q#!efj$$9a%8by6uux)qkc
      - DEBUG=True
      - DB_HOST=postgres
      - DB_NAME=market_stream
      - DB_USER=market_admin
      - DB_PASSWORD=123456
      - DB_PORT=5432
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    volumes:
      - static_volume:/app/static
      - media_volume:/app/media
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: >
      sh -c "python manage.py collectstatic --noinput &&
             python manage.py runserver 0.0.0.0:8000"

  # FastAPI Service
  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    restart: unless-stopped
    environment:
      - DB_HOST=postgres
      - DB_NAME=market_stream
      - DB_USER=market_admin
      - DB_PASSWORD=123456
      - DB_PORT=5432
    ports:
      - "8001:8001"
    depends_on:
      postgres:
        condition: service_healthy

  # Celery Worker
  celery-worker:
    build:
      context: .
      dockerfile: Dockerfile.celery
    restart: unless-stopped
    environment:
      - DJANGO_SECRET_KEY=django-insecure-&frii7l!br2#-t7vz*=ud6^=%so!$$q#!efj$$9a%8by6uux)qkc
      - DEBUG=True
      - DB_HOST=postgres
      - DB_NAME=market_stream
      - DB_USER=market_admin
      - DB_PASSWORD=123456
      - DB_PORT=5432
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    command: celery -A market_stream worker --loglevel=info
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - media_volume:/app/media

  # Celery Beat Scheduler
  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile.celery
    restart: unless-stopped
    environment:
      - DJANGO_SECRET_KEY=django-insecure-&frii7l!br2#-t7vz*=ud6^=%so!$$q#!efj$$9a%8by6uux)qkc
      - DEBUG=True
      - DB_HOST=postgres
      - DB_NAME=market_stream
      - DB_USER=market_admin
      - DB_PASSWORD=123456
      - DB_PORT=5432
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    command: celery -A market_stream beat --loglevel=info
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./celerybeat-schedule:/app/celerybeat-schedule

  # Celery Flower (Optional - for monitoring)
  flower:
    build:
      context: .
      dockerfile: Dockerfile.celery
    restart: unless-stopped
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    command: celery -A market_stream flower
    ports:
      - "5555:5555"
    depends_on:
      redis:
        condition: service_healthy

volumes:
  postgres_data:
  redis_data:
  static_volume:
  media_volume:

networks:
  default:
    driver: bridge 